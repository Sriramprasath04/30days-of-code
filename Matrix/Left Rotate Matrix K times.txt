//{ Driver Code Starts
// Initial Template for java

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String S[] = read.readLine().split(" ");
            int N = Integer.parseInt(S[0]);
            int M = Integer.parseInt(S[1]);
            int K = Integer.parseInt(S[2]);
            int Mat[][] = new int[N][M];
            for (int i = 0; i < N; i++) {
                String S1[] = read.readLine().split(" ");
                for (int j = 0; j < M; j++) {
                    Mat[i][j] = Integer.parseInt(S1[j]);
                }
            }
            Solution ob = new Solution();
            int ans[][] = ob.rotateMatrix(N, M, K, Mat);
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < M; j++) System.out.print(ans[i][j] + " ");
                System.out.println();
            }
        }
    }
}

// } Driver Code Ends

//      k = 1      k = 2      k = 3
// 1 2 3      2 3 1     3 1 2      1 2 3
// 4 5 6  ->  5 6 4 ->  6 4 5  ->  4 5 6
// 7 8 9      8 9 7     9 7 8      7 8 9

class Solution {
    int[][] rotateMatrix(int N, int M, int K, int Mat[][]) {
        // code here
        K = K%M;
        for(int i=0; i<N ;i++){
            rotate(Mat, i, 0, K-1);
            rotate(Mat, i, K, M-1);
            rotate(Mat, i, 0, M-1);
        }
        return Mat;
    }
    
    static void rotate(int[][] arr, int r, int start, int end){
        while(start<end){
            int temp = arr[r][start];
            arr[r][start] = arr[r][end];
            arr[r][end] = temp;
            start++;
            end--;
        }
    }
};
