//{ Driver Code Starts
import java.io.*;
import java.util.*;
class GFG
{
    public static void main(String args[])throws IOException
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            int n = sc.nextInt();
            
            int matrix[][] = new int[n][n];
            for(int i = 0; i < n; i++)
                for(int j = 0; j < n; j++)
                    matrix[i][j] = sc.nextInt();

            Solution ob = new Solution();
            ArrayList<Integer> ans = ob.sumTriangles(matrix,n);
            for (Integer val: ans) 
                System.out.print(val+" "); 
            System.out.println();
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution
{
    //Function to return sum of upper and lower triangles of a matrix.
    static ArrayList<Integer> sumTriangles(int matrix[][], int n)
    {
        // code here
        ArrayList<Integer> res = new ArrayList<>();
        res.add(sumUP(matrix, n));
        res.add(sumLP(matrix, n));
        return res;
    }
    
    static int sumUP(int[][] matrix, int n){
        int mid = n/2;
        int sum = 0;
        for(int i=0; i<n ;i++){
            for(int j=i; j<n ;j++){
                sum += matrix[i][j];
            }
            mid += 1;
        }
        
        return sum;
    }
    
    
    static int sumLP(int[][] matrix, int n){
        int sum = 0;
        for(int i=0; i<n ;i++){
            for(int j=0; j<=i ;j++){
                sum += matrix[i][j];
            }
        }
        
        return sum;
    }
}


// After Optimization

//{ Driver Code Starts
import java.io.*;
import java.util.*;
class GFG
{
    public static void main(String args[])throws IOException
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            int n = sc.nextInt();
            
            int matrix[][] = new int[n][n];
            for(int i = 0; i < n; i++)
                for(int j = 0; j < n; j++)
                    matrix[i][j] = sc.nextInt();

            Solution ob = new Solution();
            ArrayList<Integer> ans = ob.sumTriangles(matrix,n);
            for (Integer val: ans) 
                System.out.print(val+" "); 
            System.out.println();
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution
{
    //Function to return sum of upper and lower triangles of a matrix.
    static ArrayList<Integer> sumTriangles(int matrix[][], int n)
    {
        // code here
        ArrayList<Integer> res = new ArrayList<>();
        sum(matrix, n, res);
        return res;
    }
    
    static void sum(int[][] matrix, int n, ArrayList<Integer> res){
        int mid = n/2;
        int sumUP = 0;
        int sumLR = 0;
        for(int i=0; i<n ;i++){
            for(int j=i; j<n ;j++){
                sumUP += matrix[i][j];
            }
            mid += 1;
            
            for(int k=0; k<=i ;k++){
                sumLR += matrix[i][k];
            }
        }
        
        res.add(sumUP);
        res.add(sumLR);
    }
    
}
