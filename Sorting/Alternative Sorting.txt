//{ Driver Code Starts
//Initial Template for Java



//Initial Template for Java



import java.io.*;
import java.util.*;


// } Driver Code Ends
//User function Template for Java



class Solution
{
    ArrayList<Long> alternateSort(long arr[] ,int N)
    {
        
        // Your code goes here
        ArrayList<Long> res = new ArrayList<>();
        sort(arr, 0, N-1);
        int low = 0;
        int high = N-1;
        int i=0;
        while(low<=high){
            if(i%2==0){
                res.add(arr[high]);
                high--;
            } else {
                res.add(arr[low]);
                low++;
            }
            i++;
        }
        
        return res;
    }
    
    static void sort(long[] arr, int low, int high){
        if(low<high){
            int mid = (low+high)/2;
            sort(arr, low, mid);
            sort(arr, mid+1, high);
            merge(arr, low, mid, high);
        }
    }
    
    static void merge(long[] arr, int low, int mid, int high){
        ArrayList<Long> lis = new ArrayList<>();
        int i = low;
        int j = mid+1;
        
        while(i<=mid && j<=high){
            if(arr[i]<arr[j]){
                lis.add(arr[i]);
                i++;
            } else {
                lis.add(arr[j]);
                j++;
            }
        }
        
        while(i<=mid){
            lis.add(arr[i]);
            i++;
        }
        
        while(j<=high){
            lis.add(arr[j]);
            j++;
        }
        
        for(int k=low; k<=high ;k++){
            arr[k] = lis.get(k-low);
        }
        
    }
}


//{ Driver Code Starts.

// Driver class
class Array {

    // Driver code
    public static void main(String[] args) throws IOException {
        // Taking input using buffered reader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int testcases = Integer.parseInt(br.readLine());
        // looping through all testcases
        while (testcases-- > 0) {
            int n = Integer.parseInt(br.readLine());
//            String line = br.readLine();
//            String[] a2 = line.trim().split("\\s+");
//            int n =Integer.parseInt(a2[0]);
//            int k =Integer.parseInt(a2[1]);
            //int y =Integer.parseInt(a2[2]);
            String line1 = br.readLine();
            String[] a1 = line1.trim().split("\\s+");
            long a[] = new long[n];
            for (int i = 0; i < n; i++) {
                a[i] = Long.parseLong(a1[i]);
            }
            Solution ob = new Solution();
            //ArrayList<Long> ans=ob.smallestDifferenceTriplet(a,b,c,n);
            ArrayList<Long> ans = ob.alternateSort(a, n);
            for (int i = 0; i < n; i++) {
                System.out.print(ans.get(i) + " ");
            }
            System.out.println();
        }
    }
}




// } Driver Code Ends
