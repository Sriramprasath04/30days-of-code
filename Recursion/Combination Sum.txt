//Combination Sum
class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        combination(candidates, target, 0, ans, temp);
        return ans;
    }

    static void combination(int[] arr, int target, int indx, List<List<Integer>> ans, List<Integer> temp){
        if(indx >= arr.length){
            if(target == 0){
                ans.add(new ArrayList<>(temp));
            }
            return;
        }

        if(arr[indx]<=target){
            temp.add(arr[indx]);
            combination(arr, target-arr[indx], indx, ans, temp);
            temp.remove(temp.size()-1);
        }
        combination(arr, target, indx+1, ans, temp);
    }
}
